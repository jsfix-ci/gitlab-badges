{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-05T21:05:56.749Z",
    "end": "2021-12-05T21:05:57.947Z",
    "duration": 1198,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e43d5f04-c975-4f7f-8e31-ef84b27d4e32",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "448e2951-3872-48ef-98cd-7bf4336f0073",
          "title": "States",
          "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
          "file": "/test/lib/states.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "34df14af-b1c7-4b60-8d3c-49813ec32c51",
              "title": "constructor()",
              "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
              "file": "/test/lib/states.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw an error with invalid url",
                  "fullTitle": "States constructor() should throw an error with invalid url",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(() => {\n    new states_1.default('ftp://foo.bar', '****');\n}, /Invalid url!/);",
                  "err": {},
                  "uuid": "d8cbf3f9-8293-4434-9a58-a7cb2ca0acd1",
                  "parentUUID": "34df14af-b1c7-4b60-8d3c-49813ec32c51",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error without token",
                  "fullTitle": "States constructor() should throw an error without token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(() => {\n    new states_1.default('http://localhost', '****');\n}, /Invalid token!/);",
                  "err": {},
                  "uuid": "12df44bf-aab5-4029-a079-6c8ae423bef2",
                  "parentUUID": "34df14af-b1c7-4b60-8d3c-49813ec32c51",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d8cbf3f9-8293-4434-9a58-a7cb2ca0acd1",
                "12df44bf-aab5-4029-a079-6c8ae423bef2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f96b4504-5e25-4530-ab8b-fc4a0cd36e95",
              "title": "getState()",
              "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
              "file": "/test/lib/states.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "States getState() should work",
                  "timedOut": false,
                  "duration": 1188,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(this, void 0, void 0, function* () {\n    const states = yield new states_1.default();\n    const result1 = yield states.getState(projectId, 'develop');\n    assert_1.default.strictEqual(typeof result1.status, 'string');\n    assert_1.default.ok(typeof result1.coverage === 'string' || result1.coverage === undefined);\n    const result2 = yield states.getState(projectId, 'develop');\n    assert_1.default.strictEqual(result2.status, result1.status);\n    assert_1.default.strictEqual(result2.coverage, result1.coverage);\n});",
                  "err": {},
                  "uuid": "78f12c18-14f2-4d92-81cc-a2ba1bac9c94",
                  "parentUUID": "f96b4504-5e25-4530-ab8b-fc4a0cd36e95",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "78f12c18-14f2-4d92-81cc-a2ba1bac9c94"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1188,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}