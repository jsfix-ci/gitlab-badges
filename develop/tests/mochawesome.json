{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-02T20:03:54.975Z",
    "end": "2022-05-02T20:03:56.703Z",
    "duration": 1728,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "89ea7812-98ad-4cd5-b631-b2042cdeb652",
      "title": "",
      "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
      "file": "/test/lib/states.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ed04d6cd-48a4-42be-9257-9400591fdffe",
          "title": "States",
          "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
          "file": "/test/lib/states.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d8e5cf6e-c202-45b3-be14-4c967f57107a",
              "title": "constructor()",
              "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
              "file": "/test/lib/states.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw an error with invalid url",
                  "fullTitle": "States constructor() should throw an error with invalid url",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(() => {\n    new states_1.default('ftp://foo.bar', '****');\n}, /Invalid url!/);",
                  "err": {},
                  "uuid": "0348dad9-2807-4edc-90d9-69dd46469e27",
                  "parentUUID": "d8e5cf6e-c202-45b3-be14-4c967f57107a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error without token",
                  "fullTitle": "States constructor() should throw an error without token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(() => {\n    new states_1.default('http://localhost', '****');\n}, /Invalid token!/);",
                  "err": {},
                  "uuid": "5a6123d5-670e-4624-af78-f8cd7e0aac29",
                  "parentUUID": "d8e5cf6e-c202-45b3-be14-4c967f57107a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0348dad9-2807-4edc-90d9-69dd46469e27",
                "5a6123d5-670e-4624-af78-f8cd7e0aac29"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5b9e3dc3-b7d9-4c94-8daa-96066fec80d4",
              "title": "getState()",
              "fullFile": "/home/runner/work/gitlab-badges/gitlab-badges/test/lib/states.ts",
              "file": "/test/lib/states.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "States getState() should work",
                  "timedOut": false,
                  "duration": 1722,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(this, void 0, void 0, function* () {\n    const states = yield new states_1.default();\n    const result1 = yield states.getState(projectId, 'develop');\n    assert_1.default.strictEqual(typeof result1.status, 'string');\n    assert_1.default.ok(typeof result1.coverage === 'string' || result1.coverage === undefined);\n    const result2 = yield states.getState(projectId, 'develop');\n    assert_1.default.strictEqual(result2.status, result1.status);\n    assert_1.default.strictEqual(result2.coverage, result1.coverage);\n});",
                  "err": {},
                  "uuid": "a815847f-9614-47ae-b8df-40073ed661bd",
                  "parentUUID": "5b9e3dc3-b7d9-4c94-8daa-96066fec80d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a815847f-9614-47ae-b8df-40073ed661bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1722,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}